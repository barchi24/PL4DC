% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rangos.R
\name{check_categories}
\alias{check_categories}
\title{Detect specified categories}
\usage{
check_categories(vector, categories, value = FALSE)
}
\arguments{
\item{vector}{A character vector to check.}

\item{categories}{A vector of allowed categories.}

\item{value}{Logical indicating whether to return the values that are not in
the specified categories instead of their indices (default: FALSE).}
}
\value{
A vector with the indices or values that are not in the specified
  categories
}
\description{
This function takes a character vector and a vector of categories and returns a
vector with the indices or values that are not in the specified categories.
}
\note{
This function aims to help improve the property
  \code{\link[=properties]{Accuracy Range}}.
}
\examples{
# Example data frame
papers <- data.frame(idPaper = c(1, 2, 3, 4, 5),
                     author = c("Mario", "Ismael", "Fernando", "Gregorio", "John"),
                     state = c("Accepted", "Admitted", "Declined", "Reviewing", "Rejected"))
papers

categories <- c("Rejected", "Reviewing", "Accepted")

### Using value = FALSE
# We obtain the indexes of the invalid states from the state column
invalid_indexes <- check_categories(papers$state, categories)

# We load the wrong values
invalid_states <- papers$state[invalid_indexes]
invalid_states

### Using value = TRUE
# We obtain the invalid states
invalid_states <- check_categories(papers$state, categories, value = TRUE)
invalid_states

# We create a data frame with only the valid records
valid_papers <- papers[!papers$state \%in\% invalid_states,]
valid_papers

# We create a data frame with only the invalid records
invalid_papers <- papers[papers$state \%in\% invalid_states,]
invalid_papers
}
\seealso{
\code{\link{outside_range}}
}
