% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integridad.R
\name{isDerivedColumnValid}
\alias{isDerivedColumnValid}
\alias{validate_derived_column}
\title{Check if a derived column is valid based on a formula}
\usage{
isDerivedColumnValid(df, col_name, formula)

validate_derived_column(df, col_name, formula, value = FALSE)
}
\arguments{
\item{df}{The data frame that contains the column to be validated.}

\item{col_name}{Name or index of the column to be validated.}

\item{formula}{A formula that specifies how to calculate the new column based
on other columns in the data frame. The formula can include arithmetic
operations and function calls, and can reference other columns in this (df)
or another data frame using their names or indices.}

\item{value}{Logical indicating whether to return invalid values of the
column (TRUE) or the complete rows containing invalid values (FALSE).
Default is FALSE.}
}
\value{
\code{isDerivedColumnValid} returns a logical value indicating whether all
values comply with the formula entered (TRUE) or not (FALSE).

\code{validate_derived_column (value = FALSE)} returns a dataframe with the
rows containing invalid values in \code{col_name}.

\code{validate_derived_column (value = TRUE)} returns a vector with the
invalid values of \code{col_name}.
}
\description{
Both functions validate whether a column (created based on data from other
columns) is valid by evaluating a formula that references other columns in
this or another data frame. \code{isDerivedColumnValid} returns a logical
value indicating whether all values comply with the formula entered or not,
and \code{validate_derived_column} returns the invalid values of the column
or complete rows containing invalid values, depending on the \code{value}
parameter.
}
\details{
The \code{formula} parameter must be wrapped in the \code{quote()}
  function so that it is passed as an evaluable expression. For example:
  \code{isDerivedColumnValid(df, "col3", quote(col1 + col2))}
}
\note{
These functions aim to help improve the property
  \code{\link[=characteristics_properties]{Referential Integrity}}.
}
\examples{
# Example data frame
data <- data.frame(x = c(1, 2, 3, 4), y = c(4, 5, 6, 7), z = c(5, 7, 18, 11))
data

# Using isDerivedColumnValid we check if all the values are valid
isDerivedColumnValid(data, "z", quote(x + y))
# We load the wrong values using validate_derived_column (value = TRUE)
invalid_values <- validate_derived_column(data, "z", quote(x + y), value = TRUE)
invalid_values

# We check the row to see what's wrong
invalid_rows <- data[data$z == 18,]

# We could directly obtain the rows using validate_derived_column (value = FALSE)
invalid_rows <- validate_derived_column(data, "z", quote(x + y))
invalid_rows
}
\seealso{
Use \code{\link{derived_column}} to create columns derived from the
  data in other columns.
}
