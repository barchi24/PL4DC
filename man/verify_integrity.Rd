% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integridad.R
\name{verify_integrity}
\alias{verify_integrity}
\title{Verifies referential integrity between two data frames}
\usage{
verify_integrity(
  foreign_df,
  foreign_col,
  primary_df,
  primary_col,
  value = FALSE
)
}
\arguments{
\item{foreign_df}{The data frame containing the foreign key.}

\item{foreign_col}{The name of the column in the data frame (foreign_df) that
contains the foreign values.}

\item{primary_df}{The data frame containing the primary key.}

\item{primary_col}{The name of the column in the  data frame (primary_df)
that contains the primary values.}

\item{value}{Logical indicating whether to return the violated values of
\code{foreign_col} (TRUE) or the complete rows of \code{foreign_df}
containing the violated values (FALSE). Default is FALSE.}
}
\value{
\code{verify_integrity (value = FALSE)} returns a dataframe with the
rows containing the violated values in \code{foreign_col}.

\code{verify_integrity (value = TRUE)} returns a vector with the
violated values in \code{foreign_col}.
}
\description{
This function verifies whether the values in one column of a data frame
(primary_df) are present in another column of a different data frame
(foreign_df), to ensure referential integrity between both data frames.
}
\note{
This function aims to help improve the property
  \code{\link[=properties]{Referential Integrity}}.
}
\examples{
# Example data frame
employees <- data.frame(id = 1:5, name = c("Mario", "Ismael", "Fernando", "Gregorio", "John"))
employees

sales <- data.frame(id = 1:5, price = c(500, 1000, 250, 300, 500),
                    date = c("08/01/2022", "16/03/2022", "03/04/2022", "04/04/2022", "10/05/2022"),
                    seller = c(1, 2, 3, 3, 6))
sales

### Using value = FALSE
# We obtain a data frame with only the invalid records
invalid_sales <- verify_integrity(sales, "seller", employees, "id")
invalid_sales

# We create a data frame with only the valid records
valid_sales <- sales[!sales$seller \%in\% invalid_sales$seller,]

### Using value = TRUE
# We obtain the violated_values
violated_values <- verify_integrity(sales, "seller", employees, "id", value = TRUE)
violated_values

# We create a data frame with only the valid records
valid_sales <- sales[!sales$seller \%in\% violated_values,]
valid_sales

# We create a data frame with only the invalid records
invalid_sales <- sales[sales$seller \%in\% violated_values,]
invalid_sales
}
