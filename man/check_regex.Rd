% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cadenas.R
\name{check_regex}
\alias{check_regex}
\alias{check_regexl}
\title{Check regular expressions in a character vector}
\usage{
check_regex(pattern, vector, value = FALSE, ignore.case = FALSE)

check_regexl(pattern, vector, ignore.case = FALSE)
}
\arguments{
\item{pattern}{a character string containing a regular expression to search for.}

\item{vector}{a character vector to search in.}

\item{value}{logical indicating whether to return the actual non-matching
elements instead of their indices (default: FALSE).}

\item{ignore.case}{logical indicating whether to ignore case when matching
the regular expression (default: FALSE).}
}
\value{
\code{check_regex (value = FALSE)} returns a vector of the indices of the
elements of \code{vector} that did not yield a match.

\code{check_regex (value = TRUE)} returns a character vector of the actual
non-matching elements of \code{vector}.

\code{check_regexl} returns a logical vector (match or not for each element
of \code{vector}).
}
\description{
\code{check_regex} checks if a regular expression doesn't match any
element(s) of a given character vector. \code{check_regexl} returns a logical
vector indicating whether there is a match between the pattern and each
element of the vector.
}
\examples{
check_regex("[A-Za-z]+", c("Hello World", "123456", "foo", "bar 42"))
check_regex("[0-9]+", c("Hello World", "123456", "foo", "bar 42"), value = TRUE)

check_regexl("[A-Za-z]+", c("Hello World", "123456", "foo", "bar 42"))
}
\seealso{
\code{\link{regular expression}} (aka \code{\link{regexp}}) for
  details of the pattern specification.
}
