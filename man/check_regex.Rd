% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cadenas.R
\name{check_regex}
\alias{check_regex}
\alias{check_regexl}
\title{Check regular expressions in a character vector}
\usage{
check_regex(pattern, vector, value = FALSE, ignore.case = FALSE)

check_regexl(pattern, vector, ignore.case = FALSE)
}
\arguments{
\item{pattern}{a character string containing a regular expression to search for.}

\item{vector}{a character vector to search in.}

\item{value}{logical indicating whether to return the actual non-matching
elements instead of their indices (default: FALSE).}

\item{ignore.case}{logical indicating whether to ignore case when matching
the regular expression (default: FALSE).}
}
\value{
\code{check_regex (value = FALSE)} returns a vector of the indices of the
elements of \code{vector} that did not yield a match.

\code{check_regex (value = TRUE)} returns a character vector of the actual
non-matching elements of \code{vector}.

\code{check_regexl} returns a logical vector (match or not for each element
of \code{vector}).
}
\description{
\code{check_regex} checks if a regular expression doesn't match any
element(s) of a given character vector. \code{check_regexl} returns a logical
vector indicating whether there is a match between the pattern and each
element of the vector.
}
\examples{
# Example data frame
users <- data.frame(idUser = c(1, 2, 3, 4, 5),
                    name = c("Mario", "Ismael", "Fernando", "Gregorio", "John"),
                    dni = c("71684024L", "5684544A", "05331975M", "52498742", "603489758"))
users

# Regular expression of the DNI
dni_pattern <- "^[0-9]{8}[TRWAGMYFPDXBNJZSQVHLCKE]$"

### Using check_regex (value = FALSE)
# We obtain the indexes of the invalid dni from the dni column
invalid_index <- check_regex(dni_pattern, users$dni)

# We load the wrong values
invalid_dnis <- users$dni[invalid_index]
invalid_dnis

### Using check_regex (value = TRUE)
# We obtain the invalid values of the dni's
invalid_dnis <- check_regex(dni_pattern, users$dni, value = TRUE)
invalid_dnis

# We create a data frame with only the valid records
valid_users <- users[!users$dni \%in\% invalid_dnis,]
valid_users

# We create a data frame with only the invalid records
invalid_users <- users[users$dni \%in\% invalid_dnis,]
invalid_users

### Using check_regexl
# We obtain a logical vector of the matching
validation <- check_regexl(dni_pattern, users$dni)
validation

# We create a data frame with only the valid records
valid_users <- users[validation,]
valid_users

# We create a data frame with only the invalid records
invalid_users <- users[!validation,]
invalid_users
}
\seealso{
\code{\link{regular expression}} (aka \code{\link{regexp}}) for details of
the pattern specification.

Examples of patterns for common elements in the data frame
\code{\link{patterns}}.
}
